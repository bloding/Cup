import React, { useState, useEffect } from 'react';
import {
  X, User, Mail, Phone, MapPin, Calendar, Check, Copy,
  ExternalLink, Smartphone, Download, FileText,
  CreditCard, Shield, Info, DollarSign, Wallet, MessageCircle
} from 'lucide-react';
import QRCode from 'qrcode';
import jsPDF from 'jspdf';

interface RegistrationFormProps {
  isOpen: boolean;
  onClose: () => void;
  ticketInfo: {
    type: 'match' | 'package';
    title: string;
    price: number;
    cryptoPrice: number;
  };
}

interface FormData {
  firstName: string;
  lastName: string;
  email: string;
  confirmEmail: string;
  phone: string;
  dateOfBirth: string;
  nationality: string;
  address: string;
  city: string;
  country: string;
  postalCode: string;
  agreeTerms: boolean;
  agreeMarketing: boolean;
}

const countries = [
  'Afghanistan', 'Albania', 'Algeria', 'Andorra', 'Angola', 'Antigua and Barbuda', 'Argentina', 'Armenia',
  'Australia', 'Austria', 'Azerbaijan', 'Bahamas', 'Bahrain', 'Bangladesh', 'Barbados', 'Belarus',
  'Belgium', 'Belize', 'Benin', 'Bhutan', 'Bolivia', 'Bosnia and Herzegovina', 'Botswana', 'Brazil',
  'Brunei', 'Bulgaria', 'Burkina Faso', 'Burundi', 'Cabo Verde', 'Cambodia', 'Cameroon', 'Canada',
  'Central African Republic', 'Chad', 'Chile', 'China', 'Colombia', 'Comoros', 'Congo', 'Costa Rica',
  'Croatia', 'Cuba', 'Cyprus', 'Czech Republic', 'Denmark', 'Djibouti', 'Dominica', 'Dominican Republic',
  'Ecuador', 'Egypt', 'El Salvador', 'Estonia', 'Eswatini', 'Ethiopia', 'Fiji', 'Finland', 'France',
  'Gabon', 'Gambia', 'Georgia', 'Germany', 'Ghana', 'Greece', 'Grenada', 'Guatemala', 'Guinea',
  'Guinea-Bissau', 'Guyana', 'Haiti', 'Honduras', 'Hungary', 'Iceland', 'India', 'Indonesia', 'Iran',
  'Iraq', 'Ireland', 'Israel', 'Italy', 'Ivory Coast', 'Jamaica', 'Japan', 'Jordan', 'Kazakhstan',
  'Kenya', 'Kiribati', 'Kuwait', 'Kyrgyzstan', 'Laos', 'Latvia', 'Lebanon', 'Lesotho', 'Liberia',
  'Libya', 'Liechtenstein', 'Lithuania', 'Luxembourg', 'Madagascar', 'Malawi', 'Malaysia', 'Maldives',
  'Mali', 'Malta', 'Mauritania', 'Mauritius', 'Mexico', 'Moldova', 'Monaco', 'Mongolia', 'Montenegro',
  'Morocco', 'Mozambique', 'Myanmar', 'Namibia', 'Nepal', 'Netherlands', 'New Zealand', 'Nicaragua',
  'Niger', 'Nigeria', 'North Korea', 'North Macedonia', 'Norway', 'Oman', 'Pakistan', 'Palestine',
  'Panama', 'Papua New Guinea', 'Paraguay', 'Peru', 'Philippines', 'Poland', 'Portugal', 'Qatar',
  'Romania', 'Russia', 'Rwanda', 'Saint Kitts and Nevis', 'Saint Lucia', 'Saint Vincent and the Grenadines',
  'Samoa', 'San Marino', 'Saudi Arabia', 'Senegal', 'Serbia', 'Seychelles', 'Sierra Leone', 'Singapore',
  'Slovakia', 'Slovenia', 'Solomon Islands', 'Somalia', 'South Africa', 'South Korea', 'South Sudan',
  'Spain', 'Sri Lanka', 'Sudan', 'Suriname', 'Sweden', 'Switzerland', 'Syria', 'Taiwan', 'Tajikistan',
  'Tanzania', 'Thailand', 'Togo', 'Tonga', 'Trinidad and Tobago', 'Tunisia', 'Turkey', 'Turkmenistan',
  'Tuvalu', 'Uganda', 'Ukraine', 'United Arab Emirates', 'United Kingdom', 'United States', 'Uruguay',
  'Uzbekistan', 'Vanuatu', 'Vatican City', 'Venezuela', 'Vietnam', 'Yemen', 'Zambia', 'Zimbabwe'
];

// ÿπŸÜŸàÿßŸÜ ÿßŸÑŸÖÿ≠ŸÅÿ∏ÿ© ÿßŸÑÿÆÿßÿµ ÿ®ŸÉ
const WALLET_ADDRESS = '0x62468C025d2738eDB2662B9994F52Af0Afa17c9d';
const WHATSAPP_NUMBER = '+34632800363';

// ÿßŸÑÿπŸÖŸÑÿßÿ™ ÿßŸÑÿ±ŸÇŸÖŸäÿ© ÿßŸÑŸÖÿØÿπŸàŸÖÿ©
const SUPPORTED_CRYPTOS = [
  { symbol: 'ETH', name: 'Ethereum', network: 'Ethereum' },
  { symbol: 'USDT', name: 'Tether (ERC-20)', network: 'Ethereum' },
  { symbol: 'USDC', name: 'USD Coin (ERC-20)', network: 'Ethereum' },
  { symbol: 'BNB', name: 'BNB (BEP-20)', network: 'BSC' },
  { symbol: 'MATIC', name: 'Polygon', network: 'Polygon' }
];

const RegistrationForm: React.FC<RegistrationFormProps> = ({ isOpen, onClose, ticketInfo }) => {
  const [currentStep, setCurrentStep] = useState(1);
  const [orderId, setOrderId] = useState('');
  const [qrCodeDataURL, setQrCodeDataURL] = useState('');
  const [selectedCrypto, setSelectedCrypto] = useState(SUPPORTED_CRYPTOS[0]);
  const [transactionId, setTransactionId] = useState('');
  const [copySuccess, setCopySuccess] = useState(false);
  const [formData, setFormData] = useState<FormData>({
    firstName: '',
    lastName: '',
    email: '',
    confirmEmail: '',
    phone: '',
    dateOfBirth: '',
    nationality: '',
    address: '',
    city: '',
    country: '',
    postalCode: '',
    agreeTerms: false,
    agreeMarketing: false
  });

  // ÿ•ŸÜÿ¥ÿßÿ° QR Code ÿπŸÜÿØ ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑŸÖŸÉŸàŸÜ
  useEffect(() => {
    const generateQRCode = async () => {
      try {
        const qrData = WALLET_ADDRESS;
        const qrCodeURL = await QRCode.toDataURL(qrData, {
          width: 256,
          margin: 2,
          color: {
            dark: '#000000',
            light: '#FFFFFF'
          }
        });
        setQrCodeDataURL(qrCodeURL);
      } catch (error) {
        console.error('ÿÆÿ∑ÿ£ ŸÅŸä ÿ•ŸÜÿ¥ÿßÿ° QR Code:', error);
      }
    };

    if (isOpen) {
      generateQRCode();
      const newOrderId = `FIFA2026-${Date.now().toString().slice(-8)}`;
      setOrderId(newOrderId);
    }
  }, [isOpen]);

  // ŸÜÿ≥ÿÆ ÿπŸÜŸàÿßŸÜ ÿßŸÑŸÖÿ≠ŸÅÿ∏ÿ©
  const copyWalletAddress = async () => {
    try {
      await navigator.clipboard.writeText(WALLET_ADDRESS);
      setCopySuccess(true);
      setTimeout(() => setCopySuccess(false), 2000);
    } catch (error) {
      console.error('ÿÆÿ∑ÿ£ ŸÅŸä ÿßŸÑŸÜÿ≥ÿÆ:', error);
      // Fallback ŸÑŸÑŸÖÿ™ÿµŸÅÿ≠ÿßÿ™ ÿßŸÑŸÇÿØŸäŸÖÿ©
      const textArea = document.createElement('textarea');
      textArea.value = WALLET_ADDRESS;
      document.body.appendChild(textArea);
      textArea.select();
      document.execCommand('copy');
      document.body.removeChild(textArea);
      setCopySuccess(true);
      setTimeout(() => setCopySuccess(false), 2000);
    }
  };

  // ÿ•ÿ±ÿ≥ÿßŸÑ ÿ™ÿ£ŸÉŸäÿØ ÿπÿ®ÿ± Ÿàÿßÿ™ÿ≥ÿßÿ®
  const sendWhatsAppConfirmation = () => {
    const message = `üé´ *ÿ™ÿ£ŸÉŸäÿØ ÿØŸÅÿπ ÿ™ÿ∞ÿßŸÉÿ± ŸÉÿ£ÿ≥ ÿßŸÑÿπÿßŸÑŸÖ FIFA 2026*

üìã *ÿ™ŸÅÿßÿµŸäŸÑ ÿßŸÑÿ∑ŸÑÿ®:*
‚Ä¢ ÿ±ŸÇŸÖ ÿßŸÑÿ∑ŸÑÿ®: ${orderId}
‚Ä¢ ÿßŸÑÿßÿ≥ŸÖ: ${formData.firstName} ${formData.lastName}
‚Ä¢ ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä: ${formData.email}
‚Ä¢ ÿßŸÑŸáÿßÿ™ŸÅ: ${formData.phone}

üéüÔ∏è *ÿ™ŸÅÿßÿµŸäŸÑ ÿßŸÑÿ™ÿ∞ŸÉÿ±ÿ©:*
‚Ä¢ ÿßŸÑŸÜŸàÿπ: ${ticketInfo.title}
‚Ä¢ ÿßŸÑÿ≥ÿπÿ± ÿßŸÑÿ£ÿµŸÑŸä: $${ticketInfo.price.toLocaleString()}
‚Ä¢ ÿßŸÑÿ≥ÿπÿ± ÿ®ÿßŸÑÿπŸÖŸÑÿ© ÿßŸÑÿ±ŸÇŸÖŸäÿ© (ÿÆÿµŸÖ 30%): $${ticketInfo.cryptoPrice.toLocaleString()}

üí∞ *ÿ™ŸÅÿßÿµŸäŸÑ ÿßŸÑÿØŸÅÿπ:*
‚Ä¢ ÿßŸÑÿπŸÖŸÑÿ© ÿßŸÑŸÖÿÆÿ™ÿßÿ±ÿ©: ${selectedCrypto.symbol} (${selectedCrypto.name})
‚Ä¢ ÿßŸÑÿ¥ÿ®ŸÉÿ©: ${selectedCrypto.network}
‚Ä¢ ÿπŸÜŸàÿßŸÜ ÿßŸÑŸÖÿ≠ŸÅÿ∏ÿ©: ${WALLET_ADDRESS}
‚Ä¢ ÿßŸÑŸÖÿ®ŸÑÿ∫ ÿßŸÑŸÖÿØŸÅŸàÿπ: $${ticketInfo.cryptoPrice.toLocaleString()}
${transactionId ? `‚Ä¢ ŸÖÿπÿ±ŸÅ ÿßŸÑŸÖÿπÿßŸÖŸÑÿ©: ${transactionId}` : '‚Ä¢ ŸÖÿπÿ±ŸÅ ÿßŸÑŸÖÿπÿßŸÖŸÑÿ©: ÿ≥Ÿäÿ™ŸÖ ÿ•ÿ∂ÿßŸÅÿ™Ÿá'}

‚úÖ *ÿ™ŸÖ ÿ•ÿ±ÿ≥ÿßŸÑ ÿßŸÑÿØŸÅÿπ Ÿàÿ£ŸÜÿ™ÿ∏ÿ± ÿßŸÑÿ™ÿ£ŸÉŸäÿØ*

üìû Ÿäÿ±ÿ¨Ÿâ ÿ™ÿ£ŸÉŸäÿØ ÿßÿ≥ÿ™ŸÑÿßŸÖ ÿßŸÑÿØŸÅÿπ Ÿàÿ•ÿ±ÿ≥ÿßŸÑ ÿßŸÑÿ™ÿ∞ÿßŸÉÿ± ÿßŸÑÿ±ÿ≥ŸÖŸäÿ©.

ÿ¥ŸÉÿ±ÿßŸã ŸÑŸÉŸÖ! üôè`;

    const encodedMessage = encodeURIComponent(message);
    const whatsappURL = `https://wa.me/${WHATSAPP_NUMBER.replace('+', '')}?text=${encodedMessage}`;
    
    window.open(whatsappURL, '_blank');
  };

  // ÿ•ŸÜÿ™ÿßÿ¨ ÿ™ÿ∞ŸÉÿ±ÿ© PDF
  const generateFIFATicketPDF = () => {
    const securityCode = Math.random().toString(36).substring(2, 15).toUpperCase();
    const qrCode = `FIFA2026-${orderId}-${securityCode}`;

    const pdf = new jsPDF('p', 'mm', 'a4');
    
    pdf.setFont('helvetica');

    // ÿµŸÅÿ≠ÿ© ÿ£ŸàŸÑŸâ - ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿ™ÿ∞ŸÉÿ±ÿ©
    pdf.setFillColor(0, 51, 153);
    pdf.rect(0, 0, 210, 30, 'F');
    
    pdf.setTextColor(255, 255, 255);
    pdf.setFontSize(24);
    pdf.text('FIFA WORLD CUP 2026‚Ñ¢', 105, 15, { align: 'center' });
    pdf.setFontSize(12);
    pdf.text('OFFICIAL TICKET', 105, 22, { align: 'center' });

    pdf.setTextColor(0, 0, 0);
    pdf.setFontSize(16);
    pdf.text('TICKET INFORMATION', 20, 45);
    
    pdf.setFontSize(11);
    let yPos = 55;
    
    pdf.text(`Order ID: ${orderId}`, 20, yPos);
    yPos += 8;
    pdf.text(`Event: ${ticketInfo.title}`, 20, yPos);
    yPos += 8;
    pdf.text(`Type: ${ticketInfo.type === 'match' ? 'Single Match' : 'Package'}`, 20, yPos);
    yPos += 8;
    pdf.text(`Amount Paid: $${ticketInfo.cryptoPrice} USD`, 20, yPos);
    yPos += 8;
    pdf.text(`Payment Method: ${selectedCrypto.symbol} (${selectedCrypto.name})`, 20, yPos);
    yPos += 8;
    pdf.text(`Wallet Address: ${WALLET_ADDRESS}`, 20, yPos);
    yPos += 8;
    if (transactionId) {
      pdf.text(`Transaction ID: ${transactionId}`, 20, yPos);
      yPos += 8;
    }
    yPos += 15;

    // ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿ≠ÿßŸÖŸÑ ÿßŸÑÿ™ÿ∞ŸÉÿ±ÿ©
    pdf.setFontSize(16);
    pdf.text('TICKET HOLDER INFORMATION', 20, yPos);
    yPos += 10;
    
    pdf.setFontSize(11);
    pdf.text(`Name: ${formData.firstName} ${formData.lastName}`, 20, yPos);
    yPos += 8;
    pdf.text(`Email: ${formData.email}`, 20, yPos);
    yPos += 8;
    pdf.text(`Phone: ${formData.phone}`, 20, yPos);
    yPos += 8;
    if (formData.nationality) {
      pdf.text(`Nationality: ${formData.nationality}`, 20, yPos);
      yPos += 8;
    }
    if (formData.dateOfBirth) {
      pdf.text(`Date of Birth: ${formData.dateOfBirth}`, 20, yPos);
      yPos += 8;
    }
    yPos += 10;

    // ÿπŸÜŸàÿßŸÜ ÿßŸÑŸÅŸàÿ™ÿ±ÿ©
    pdf.setFontSize(16);
    pdf.text('BILLING ADDRESS', 20, yPos);
    yPos += 10;
    
    pdf.setFontSize(11);
    pdf.text(`Address: ${formData.address}`, 20, yPos);
    yPos += 8;
    pdf.text(`City: ${formData.city}`, 20, yPos);
    yPos += 8;
    pdf.text(`Country: ${formData.country}`, 20, yPos);
    yPos += 8;
    if (formData.postalCode) {
      pdf.text(`Postal Code: ${formData.postalCode}`, 20, yPos);
      yPos += 8;
    }
    yPos += 15;

    // ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿ£ŸÖÿßŸÜ
    pdf.setFillColor(255, 255, 0);
    pdf.rect(15, yPos - 5, 180, 25, 'F');
    
    pdf.setFontSize(14);
    pdf.text('SECURITY INFORMATION', 20, yPos + 5);
    pdf.setFontSize(10);
    pdf.text(`Security Code: ${securityCode}`, 20, yPos + 12);
    pdf.text(`QR Code: ${qrCode}`, 20, yPos + 18);
    yPos += 35;

    pdf.setFontSize(10);
    pdf.text(`Issue Date: ${new Date().toLocaleDateString()}`, 20, yPos);
    pdf.text(`Issue Time: ${new Date().toLocaleTimeString()}`, 120, yPos);

    // ÿµŸÅÿ≠ÿ© ÿ´ÿßŸÜŸäÿ© - ÿßŸÑÿ¥ÿ±Ÿàÿ∑ ŸàÿßŸÑÿ£ÿ≠ŸÉÿßŸÖ
    pdf.addPage();
    
    pdf.setFillColor(0, 51, 153);
    pdf.rect(0, 0, 210, 25, 'F');
    
    pdf.setTextColor(255, 255, 255);
    pdf.setFontSize(18);
    pdf.text('TERMS & CONDITIONS', 105, 15, { align: 'center' });

    pdf.setTextColor(0, 0, 0);
    pdf.setFontSize(12);
    yPos = 35;

    const terms = [
      'IMPORTANT INFORMATION:',
      '',
      '‚Ä¢ This ticket is non-transferable and non-refundable',
      '‚Ä¢ Valid photo ID required for entry',
      '‚Ä¢ Arrive at venue 2 hours before kick-off',
      '‚Ä¢ Security screening mandatory for all attendees',
      '‚Ä¢ No outside food or beverages allowed',
      '‚Ä¢ Professional cameras and recording devices prohibited',
      '‚Ä¢ Ticket holder assumes all risks',
      '',
      'PROHIBITED ITEMS:',
      '‚Ä¢ Weapons of any kind',
      '‚Ä¢ Illegal substances',
      '‚Ä¢ Large bags (over 35cm x 25cm x 16cm)',
      '‚Ä¢ Glass containers',
      '‚Ä¢ Professional photography equipment',
      '‚Ä¢ Laser pointers',
      '‚Ä¢ Political banners or flags',
      '',
      'CONTACT INFORMATION:',
      `‚Ä¢ WhatsApp Support: ${WHATSAPP_NUMBER}`,
      '‚Ä¢ Email: tickets@worldcup2026.com',
      '‚Ä¢ Website: www.fifa.com/worldcup2026',
      '',
      'This ticket is issued subject to FIFA regulations and local laws.',
      'Unauthorized reproduction is strictly prohibited.',
      '',
      '¬© FIFA World Cup 2026‚Ñ¢ - All Rights Reserved'
    ];

    terms.forEach(term => {
      if (yPos > 270) {
        pdf.addPage();
        yPos = 20;
      }
      
      if (term.startsWith('‚Ä¢')) {
        pdf.setFontSize(10);
      } else if (term.includes(':')) {
        pdf.setFontSize(11);
        pdf.setFont('helvetica', 'bold');
      } else {
        pdf.setFontSize(10);
        pdf.setFont('helvetica', 'normal');
      }
      
      pdf.text(term, 20, yPos);
      yPos += 6;
    });

    const fileName = `FIFA_WorldCup_2026_Ticket_${formData.firstName}_${formData.lastName}_${orderId}.pdf`;
    pdf.save(fileName);
  };

  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement | HTMLSelectElement>) => {
    const { name, value, type } = e.target;
    setFormData(prev => ({
      ...prev,
      [name]: type === 'checkbox' ? (e.target as HTMLInputElement).checked : value
    }));
  };

  const validateStep = (step: number): boolean => {
    switch (step) {
      case 1:
        if (!formData.firstName.trim()) {
          alert('Ÿäÿ±ÿ¨Ÿâ ÿ•ÿØÿÆÿßŸÑ ÿßŸÑÿßÿ≥ŸÖ ÿßŸÑÿ£ŸàŸÑ');
          return false;
        }
        if (!formData.lastName.trim()) {
          alert('Ÿäÿ±ÿ¨Ÿâ ÿ•ÿØÿÆÿßŸÑ ÿßÿ≥ŸÖ ÿßŸÑÿπÿßÿ¶ŸÑÿ©');
          return false;
        }
        if (!formData.email.trim()) {
          alert('Ÿäÿ±ÿ¨Ÿâ ÿ•ÿØÿÆÿßŸÑ ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä');
          return false;
        }
        if (!formData.confirmEmail.trim()) {
          alert('Ÿäÿ±ÿ¨Ÿâ ÿ™ÿ£ŸÉŸäÿØ ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä');
          return false;
        }
        if (formData.email !== formData.confirmEmail) {
          alert('ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä ÿ∫Ÿäÿ± ŸÖÿ™ÿ∑ÿßÿ®ŸÇ');
          return false;
        }
        if (!formData.phone.trim()) {
          alert('Ÿäÿ±ÿ¨Ÿâ ÿ•ÿØÿÆÿßŸÑ ÿ±ŸÇŸÖ ÿßŸÑŸáÿßÿ™ŸÅ');
          return false;
        }
        const emailRegex = /^[^\s@]+@[^\s@]+\.[^\s@]+$/;
        if (!emailRegex.test(formData.email)) {
          alert('Ÿäÿ±ÿ¨Ÿâ ÿ•ÿØÿÆÿßŸÑ ÿ®ÿ±ŸäÿØ ÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä ÿµÿ≠Ÿäÿ≠');
          return false;
        }
        return true;
      case 2:
        if (!formData.address.trim()) {
          alert('Ÿäÿ±ÿ¨Ÿâ ÿ•ÿØÿÆÿßŸÑ ÿßŸÑÿπŸÜŸàÿßŸÜ');
          return false;
        }
        if (!formData.city.trim()) {
          alert('Ÿäÿ±ÿ¨Ÿâ ÿ•ÿØÿÆÿßŸÑ ÿßŸÑŸÖÿØŸäŸÜÿ©');
          return false;
        }
        if (!formData.country.trim()) {
          alert('Ÿäÿ±ÿ¨Ÿâ ÿßÿÆÿ™Ÿäÿßÿ± ÿßŸÑÿ®ŸÑÿØ');
          return false;
        }
        return true;
      case 3:
        if (!formData.agreeTerms) {
          alert('Ÿäÿ±ÿ¨Ÿâ ÿßŸÑŸÖŸàÿßŸÅŸÇÿ© ÿπŸÑŸâ ÿßŸÑÿ¥ÿ±Ÿàÿ∑ ŸàÿßŸÑÿ£ÿ≠ŸÉÿßŸÖ');
          return false;
        }
        return true;
      default:
        return true;
    }
  };

  const handleNextStep = () => {
    if (validateStep(currentStep)) {
      setCurrentStep(prev => prev + 1);
    }
  };

  const handlePrevStep = () => {
    setCurrentStep(prev => prev - 1);
  };

  if (!isOpen) return null;

  return (
    <div className="fixed inset-0 bg-black bg-opacity-50 flex items-center justify-center z-50 p-4">
      <div className="bg-white rounded-2xl max-w-2xl w-full max-h-[90vh] overflow-y-auto">
        {/* Header */}
        <div className="flex justify-between items-center p-6 border-b bg-gradient-to-r from-blue-600 to-blue-800 text-white rounded-t-2xl">
          <div>
            <h2 className="text-2xl font-bold">
              {currentStep === 5 ? 'üéâ ÿ¨ÿßŸáÿ≤ ŸÑŸÑÿ™ÿ≠ŸÖŸäŸÑ!' : 'ÿ•ŸÉŸÖÿßŸÑ ÿßŸÑÿ™ÿ≥ÿ¨ŸäŸÑ'}
            </h2>
            <p className="text-blue-200 text-sm">{ticketInfo.title}</p>
          </div>
          <button
            onClick={onClose}
            className="p-2 hover:bg-blue-700 rounded-full transition-colors"
          >
            <X className="h-5 w-5" />
          </button>
        </div>

        {/* Progress Bar */}
        {currentStep < 5 && (
          <div className="px-6 py-4 bg-gray-50">
            <div className="flex items-center justify-between mb-2">
              <span className="text-sm font-medium text-gray-600">ÿßŸÑÿÆÿ∑Ÿàÿ© {currentStep} ŸÖŸÜ 4</span>
              <span className="text-sm text-gray-500">
                {currentStep === 1 && 'ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿ¥ÿÆÿµŸäÿ©'}
                {currentStep === 2 && 'ÿ™ŸÅÿßÿµŸäŸÑ ÿßŸÑÿπŸÜŸàÿßŸÜ'}
                {currentStep === 3 && 'ÿßŸÑÿ¥ÿ±Ÿàÿ∑ ŸàÿßŸÑÿ£ÿ≠ŸÉÿßŸÖ'}
                {currentStep === 4 && 'ÿßŸÑÿØŸÅÿπ ÿ®ÿßŸÑÿπŸÖŸÑÿßÿ™ ÿßŸÑÿ±ŸÇŸÖŸäÿ©'}
              </span>
            </div>
            <div className="w-full bg-gray-200 rounded-full h-2">
              <div 
                className="bg-blue-600 h-2 rounded-full transition-all duration-300"
                style={{ width: `${(currentStep / 4) * 100}%` }}
              ></div>
            </div>
          </div>
        )}

        <div className="p-6">
          {/* Step 1: Personal Information */}
          {currentStep === 1 && (
            <div className="space-y-6">
              <div className="text-center mb-6">
                <User className="h-12 w-12 text-blue-600 mx-auto mb-2" />
                <h3 className="text-xl font-bold text-gray-800">ÿßŸÑŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿ¥ÿÆÿµŸäÿ©</h3>
                <p className="text-gray-600">Ÿäÿ±ÿ¨Ÿâ ÿ™ŸÇÿØŸäŸÖ ÿ®ŸäÿßŸÜÿßÿ™ŸÉ ÿßŸÑÿ¥ÿÆÿµŸäÿ©</p>
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">ÿßŸÑÿßÿ≥ŸÖ ÿßŸÑÿ£ŸàŸÑ *</label>
                  <input
                    type="text"
                    name="firstName"
                    value={formData.firstName}
                    onChange={handleInputChange}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="ÿ£ÿØÿÆŸÑ ÿßÿ≥ŸÖŸÉ ÿßŸÑÿ£ŸàŸÑ"
                    required
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">ÿßÿ≥ŸÖ ÿßŸÑÿπÿßÿ¶ŸÑÿ© *</label>
                  <input
                    type="text"
                    name="lastName"
                    value={formData.lastName}
                    onChange={handleInputChange}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="ÿ£ÿØÿÆŸÑ ÿßÿ≥ŸÖ ÿßŸÑÿπÿßÿ¶ŸÑÿ©"
                    required
                  />
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä *</label>
                <input
                  type="email"
                  name="email"
                  value={formData.email}
                  onChange={handleInputChange}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  placeholder="ÿ£ÿØÿÆŸÑ ÿ®ÿ±ŸäÿØŸÉ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä"
                  required
                />
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">ÿ™ÿ£ŸÉŸäÿØ ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä *</label>
                <input
                  type="email"
                  name="confirmEmail"
                  value={formData.confirmEmail}
                  onChange={handleInputChange}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  placeholder="ÿ£ŸÉÿØ ÿ®ÿ±ŸäÿØŸÉ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä"
                  required
                />
                {formData.confirmEmail && formData.email !== formData.confirmEmail && (
                  <p className="text-red-500 text-sm mt-1">ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä ÿ∫Ÿäÿ± ŸÖÿ™ÿ∑ÿßÿ®ŸÇ</p>
                )}
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">ÿ±ŸÇŸÖ ÿßŸÑŸáÿßÿ™ŸÅ *</label>
                  <input
                    type="tel"
                    name="phone"
                    value={formData.phone}
                    onChange={handleInputChange}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="+1234567890"
                    required
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">ÿ™ÿßÿ±ŸäÿÆ ÿßŸÑŸÖŸäŸÑÿßÿØ</label>
                  <input
                    type="date"
                    name="dateOfBirth"
                    value={formData.dateOfBirth}
                    onChange={handleInputChange}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  />
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">ÿßŸÑÿ¨ŸÜÿ≥Ÿäÿ©</label>
                <select
                  name="nationality"
                  value={formData.nationality}
                  onChange={handleInputChange}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                >
                  <option value="">ÿßÿÆÿ™ÿ± ÿßŸÑÿ¨ŸÜÿ≥Ÿäÿ©</option>
                  {countries.map((country) => (
                    <option key={country} value={country}>{country}</option>
                  ))}
                </select>
              </div>
            </div>
          )}

          {/* Step 2: Address Information */}
          {currentStep === 2 && (
            <div className="space-y-6">
              <div className="text-center mb-6">
                <MapPin className="h-12 w-12 text-blue-600 mx-auto mb-2" />
                <h3 className="text-xl font-bold text-gray-800">ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿπŸÜŸàÿßŸÜ</h3>
                <p className="text-gray-600">Ÿäÿ±ÿ¨Ÿâ ÿ™ŸÇÿØŸäŸÖ ÿ™ŸÅÿßÿµŸäŸÑ ÿπŸÜŸàÿßŸÜŸÉ</p>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">ÿπŸÜŸàÿßŸÜ ÿßŸÑÿ¥ÿßÿ±ÿπ *</label>
                <input
                  type="text"
                  name="address"
                  value={formData.address}
                  onChange={handleInputChange}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  placeholder="ÿ£ÿØÿÆŸÑ ÿπŸÜŸàÿßŸÜ ÿßŸÑÿ¥ÿßÿ±ÿπ"
                  required
                />
              </div>

              <div className="grid grid-cols-1 md:grid-cols-2 gap-4">
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">ÿßŸÑŸÖÿØŸäŸÜÿ© *</label>
                  <input
                    type="text"
                    name="city"
                    value={formData.city}
                    onChange={handleInputChange}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="ÿ£ÿØÿÆŸÑ ÿßŸÑŸÖÿØŸäŸÜÿ©"
                    required
                  />
                </div>
                <div>
                  <label className="block text-sm font-medium text-gray-700 mb-2">ÿßŸÑÿ±ŸÖÿ≤ ÿßŸÑÿ®ÿ±ŸäÿØŸä</label>
                  <input
                    type="text"
                    name="postalCode"
                    value={formData.postalCode}
                    onChange={handleInputChange}
                    className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                    placeholder="ÿ£ÿØÿÆŸÑ ÿßŸÑÿ±ŸÖÿ≤ ÿßŸÑÿ®ÿ±ŸäÿØŸä"
                  />
                </div>
              </div>

              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">ÿßŸÑÿ®ŸÑÿØ *</label>
                <select
                  name="country"
                  value={formData.country}
                  onChange={handleInputChange}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  required
                >
                  <option value="">ÿßÿÆÿ™ÿ± ÿßŸÑÿ®ŸÑÿØ</option>
                  {countries.map((country) => (
                    <option key={country} value={country}>{country}</option>
                  ))}
                </select>
              </div>
            </div>
          )}

          {/* Step 3: Terms and Conditions */}
          {currentStep === 3 && (
            <div className="space-y-6">
              <div className="text-center mb-6">
                <Check className="h-12 w-12 text-blue-600 mx-auto mb-2" />
                <h3 className="text-xl font-bold text-gray-800">ÿßŸÑÿ¥ÿ±Ÿàÿ∑ ŸàÿßŸÑÿ£ÿ≠ŸÉÿßŸÖ</h3>
                <p className="text-gray-600">Ÿäÿ±ÿ¨Ÿâ ŸÖÿ±ÿßÿ¨ÿπÿ© ŸàŸÇÿ®ŸàŸÑ ÿ¥ÿ±Ÿàÿ∑ŸÜÿß</p>
              </div>

              {/* Order Summary */}
              <div className="bg-gray-50 rounded-lg p-4 mb-6">
                <h4 className="font-semibold text-gray-800 mb-2">ŸÖŸÑÿÆÿµ ÿßŸÑÿ∑ŸÑÿ®</h4>
                <div className="space-y-2">
                  <div className="flex justify-between items-center">
                    <span className="text-gray-700">{ticketInfo.title}</span>
                    <span className="font-bold text-gray-800">${ticketInfo.price.toLocaleString()}</span>
                  </div>
                  <div className="flex justify-between items-center text-green-600">
                    <span className="font-semibold">ÿÆÿµŸÖ ÿßŸÑÿØŸÅÿπ ÿ®ÿßŸÑÿπŸÖŸÑÿ© ÿßŸÑÿ±ŸÇŸÖŸäÿ© (30%)</span>
                    <span className="font-bold">-${(ticketInfo.price - ticketInfo.cryptoPrice).toLocaleString()}</span>
                  </div>
                  <div className="border-t pt-2 flex justify-between items-center">
                    <span className="text-lg font-bold text-gray-800">ÿßŸÑŸÖÿ®ŸÑÿ∫ ÿßŸÑŸÜŸáÿßÿ¶Ÿä</span>
                    <span className="text-xl font-bold text-green-600">${ticketInfo.cryptoPrice.toLocaleString()}</span>
                  </div>
                </div>
              </div>

              {/* Terms and Conditions Checkboxes */}
              <div className="space-y-4">
                <label className="flex items-start space-x-3 cursor-pointer">
                  <input
                    type="checkbox"
                    name="agreeTerms"
                    checked={formData.agreeTerms}
                    onChange={handleInputChange}
                    className="mt-1 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                    required
                  />
                  <span className="text-sm text-gray-700">
                    ÿ£ŸàÿßŸÅŸÇ ÿπŸÑŸâ <a href="#" className="text-blue-600 hover:underline">ÿßŸÑÿ¥ÿ±Ÿàÿ∑ ŸàÿßŸÑÿ£ÿ≠ŸÉÿßŸÖ</a> Ÿà <a href="#" className="text-blue-600 hover:underline">ÿ≥Ÿäÿßÿ≥ÿ© ÿßŸÑÿÆÿµŸàÿµŸäÿ©</a> *
                  </span>
                </label>
                <label className="flex items-start space-x-3 cursor-pointer">
                  <input
                    type="checkbox"
                    name="agreeMarketing"
                    checked={formData.agreeMarketing}
                    onChange={handleInputChange}
                    className="mt-1 h-4 w-4 text-blue-600 focus:ring-blue-500 border-gray-300 rounded"
                  />
                  <span className="text-sm text-gray-700">
                    ÿ£ÿ±ÿ∫ÿ® ŸÅŸä ÿ™ŸÑŸÇŸä ÿ±ÿ≥ÿßÿ¶ŸÑ ÿ™ÿ≥ŸàŸäŸÇŸäÿ© ÿ≠ŸàŸÑ ŸÉÿ£ÿ≥ ÿßŸÑÿπÿßŸÑŸÖ FIFA 2026
                  </span>
                </label>
              </div>
            </div>
          )}

          {/* Step 4: Crypto Payment */}
          {currentStep === 4 && (
            <div className="space-y-6">
              <div className="text-center mb-6">
                <div className="text-4xl mb-2">üíé</div>
                <h3 className="text-xl font-bold text-gray-800">ÿßŸÑÿØŸÅÿπ ÿ®ÿßŸÑÿπŸÖŸÑÿßÿ™ ÿßŸÑÿ±ŸÇŸÖŸäÿ©</h3>
                <p className="text-gray-600">ÿßÿØŸÅÿπ ÿ®ÿ£ŸÖÿßŸÜ ÿ®ÿßÿ≥ÿ™ÿÆÿØÿßŸÖ ÿßŸÑÿπŸÖŸÑÿßÿ™ ÿßŸÑÿ±ŸÇŸÖŸäÿ©</p>
              </div>

              {/* Customer Info Summary */}
              <div className="bg-blue-50 rounded-lg p-4 mb-6">
                <h4 className="font-semibold text-blue-800 mb-3">ŸÖÿπŸÑŸàŸÖÿßÿ™ ÿßŸÑÿπŸÖŸäŸÑ</h4>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-2 text-sm">
                  <div><strong>ÿßŸÑÿßÿ≥ŸÖ:</strong> {formData.firstName} {formData.lastName}</div>
                  <div><strong>ÿßŸÑÿ®ÿ±ŸäÿØ:</strong> {formData.email}</div>
                  <div><strong>ÿßŸÑŸáÿßÿ™ŸÅ:</strong> {formData.phone}</div>
                  <div><strong>ÿßŸÑÿ®ŸÑÿØ:</strong> {formData.country}</div>
                  <div><strong>ÿ±ŸÇŸÖ ÿßŸÑÿ∑ŸÑÿ®:</strong> {orderId}</div>
                </div>
              </div>

              {/* Payment Amount */}
              <div className="bg-gradient-to-r from-green-50 to-emerald-50 border border-green-200 rounded-lg p-6 text-center">
                <div className="text-3xl font-bold text-green-600 mb-2">
                  ${ticketInfo.cryptoPrice.toLocaleString()} USD
                </div>
                <div className="text-gray-600 mb-4">
                  (ÿ™ŸÖ ÿ™ÿ∑ÿ®ŸäŸÇ ÿÆÿµŸÖ 30% ŸÑŸÑÿØŸÅÿπ ÿ®ÿßŸÑÿπŸÖŸÑÿ© ÿßŸÑÿ±ŸÇŸÖŸäÿ©)
                </div>
              </div>

              {/* Crypto Selection */}
              <div className="space-y-4">
                <h4 className="font-semibold text-gray-800">ÿßÿÆÿ™ÿ± ÿßŸÑÿπŸÖŸÑÿ© ÿßŸÑÿ±ŸÇŸÖŸäÿ©:</h4>
                <div className="grid grid-cols-1 md:grid-cols-2 gap-3">
                  {SUPPORTED_CRYPTOS.map((crypto) => (
                    <button
                      key={crypto.symbol}
                      onClick={() => setSelectedCrypto(crypto)}
                      className={`p-3 rounded-lg border text-left transition-all duration-200 ${
                        selectedCrypto.symbol === crypto.symbol
                          ? 'border-blue-500 bg-blue-50 text-blue-700'
                          : 'border-gray-200 hover:border-gray-300'
                      }`}
                    >
                      <div className="font-bold">{crypto.symbol}</div>
                      <div className="text-sm text-gray-600">{crypto.name}</div>
                      <div className="text-xs text-gray-500">{crypto.network}</div>
                    </button>
                  ))}
                </div>
              </div>

              {/* Wallet Address & QR Code */}
              <div className="bg-gray-50 rounded-lg p-6">
                <h4 className="font-semibold text-gray-800 mb-4 text-center">ÿπŸÜŸàÿßŸÜ ÿßŸÑŸÖÿ≠ŸÅÿ∏ÿ© ŸÑŸÑÿØŸÅÿπ</h4>
                
                {/* QR Code */}
                <div className="flex justify-center mb-4">
                  {qrCodeDataURL && (
                    <img 
                      src={qrCodeDataURL} 
                      alt="QR Code ŸÑŸÑÿØŸÅÿπ" 
                      className="w-48 h-48 border-2 border-gray-300 rounded-lg"
                    />
                  )}
                </div>

                {/* Wallet Address */}
                <div className="bg-white rounded-lg p-4 border">
                  <div className="text-sm text-gray-600 mb-2">ÿπŸÜŸàÿßŸÜ ÿßŸÑŸÖÿ≠ŸÅÿ∏ÿ© ({selectedCrypto.network}):</div>
                  <div className="flex items-center space-x-2">
                    <code className="flex-1 bg-gray-100 p-2 rounded text-sm font-mono break-all">
                      {WALLET_ADDRESS}
                    </code>
                    <button
                      onClick={copyWalletAddress}
                      className={`px-3 py-2 rounded-lg transition-all duration-200 flex items-center space-x-1 ${
                        copySuccess 
                          ? 'bg-green-500 text-white' 
                          : 'bg-blue-500 hover:bg-blue-600 text-white'
                      }`}
                    >
                      {copySuccess ? (
                        <>
                          <Check className="h-4 w-4" />
                          <span className="text-sm">ÿ™ŸÖ ÿßŸÑŸÜÿ≥ÿÆ!</span>
                        </>
                      ) : (
                        <>
                          <Copy className="h-4 w-4" />
                          <span className="text-sm">ŸÜÿ≥ÿÆ</span>
                        </>
                      )}
                    </button>
                  </div>
                </div>

                {/* Payment Instructions */}
                <div className="mt-4 text-sm text-gray-600">
                  <p className="font-semibold mb-2">ÿ™ÿπŸÑŸäŸÖÿßÿ™ ÿßŸÑÿØŸÅÿπ:</p>
                  <ol className="list-decimal list-inside space-y-1">
                    <li>ÿßŸÜÿ≥ÿÆ ÿπŸÜŸàÿßŸÜ ÿßŸÑŸÖÿ≠ŸÅÿ∏ÿ© ÿ£ÿπŸÑÿßŸá ÿ£Ÿà ÿßŸÖÿ≥ÿ≠ QR Code</li>
                    <li>ÿßŸÅÿ™ÿ≠ ŸÖÿ≠ŸÅÿ∏ÿ™ŸÉ ÿßŸÑÿ±ŸÇŸÖŸäÿ©</li>
                    <li>ÿ£ÿ±ÿ≥ŸÑ ${ticketInfo.cryptoPrice.toLocaleString()} USD ÿ®ÿπŸÖŸÑÿ© {selectedCrypto.symbol}</li>
                    <li>ÿßÿ≠ŸÅÿ∏ ŸÖÿπÿ±ŸÅ ÿßŸÑŸÖÿπÿßŸÖŸÑÿ© (Transaction ID)</li>
                    <li>ÿßÿ∂ÿ∫ÿ∑ ÿπŸÑŸâ "ÿ™ÿ£ŸÉŸäÿØ ÿπÿ®ÿ± Ÿàÿßÿ™ÿ≥ÿßÿ®" ÿ£ÿØŸÜÿßŸá</li>
                  </ol>
                </div>
              </div>

              {/* Transaction ID Input */}
              <div>
                <label className="block text-sm font-medium text-gray-700 mb-2">
                  ŸÖÿπÿ±ŸÅ ÿßŸÑŸÖÿπÿßŸÖŸÑÿ© (Transaction ID) - ÿßÿÆÿ™Ÿäÿßÿ±Ÿä
                </label>
                <input
                  type="text"
                  value={transactionId}
                  onChange={(e) => setTransactionId(e.target.value)}
                  className="w-full px-3 py-2 border border-gray-300 rounded-lg focus:ring-2 focus:ring-blue-500 focus:border-blue-500"
                  placeholder="ÿ£ÿØÿÆŸÑ ŸÖÿπÿ±ŸÅ ÿßŸÑŸÖÿπÿßŸÖŸÑÿ© ÿ•ÿ∞ÿß ŸÉÿßŸÜ ŸÖÿ™ŸàŸÅÿ±ÿßŸã"
                />
              </div>

              {/* WhatsApp Confirmation Button */}
              <button
                onClick={sendWhatsAppConfirmation}
                className="w-full bg-gradient-to-r from-green-500 to-green-600 hover:from-green-600 hover:to-green-700 text-white font-bold py-4 px-6 rounded-lg transition-all duration-300 transform hover:scale-105 flex items-center justify-center space-x-3"
              >
                <MessageCircle className="h-6 w-6" />
                <span>ÿ™ÿ£ŸÉŸäÿØ ÿπÿ®ÿ± Ÿàÿßÿ™ÿ≥ÿßÿ®</span>
                <div className="text-xl">üì±</div>
              </button>

              {/* Next Step Button */}
              <button
                onClick={() => setCurrentStep(5)}
                className="w-full bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-6 rounded-lg transition-all duration-300"
              >
                ŸÖÿ™ÿßÿ®ÿπÿ© ŸÑÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑÿ™ÿ∞ŸÉÿ±ÿ©
              </button>

              {/* Security Notice */}
              <div className="bg-yellow-50 border border-yellow-200 rounded-lg p-4">
                <div className="flex items-start space-x-2">
                  <Shield className="h-5 w-5 text-yellow-600 mt-0.5" />
                  <div className="text-sm text-yellow-800">
                    <p className="font-semibold mb-1">ŸÖŸÑÿßÿ≠ÿ∏ÿ© ÿ£ŸÖŸÜŸäÿ©:</p>
                    <ul className="list-disc list-inside space-y-1">
                      <li>ÿ™ÿ£ŸÉÿØ ŸÖŸÜ ÿ•ÿ±ÿ≥ÿßŸÑ ÿßŸÑŸÖÿ®ŸÑÿ∫ ÿßŸÑÿµÿ≠Ÿäÿ≠ ÿ®ÿßŸÑÿπŸÖŸÑÿ© ÿßŸÑŸÖÿ≠ÿØÿØÿ©</li>
                      <li>ÿßÿ≠ŸÅÿ∏ ŸÖÿπÿ±ŸÅ ÿßŸÑŸÖÿπÿßŸÖŸÑÿ© ŸÑŸÑŸÖÿ±ÿßÿ¨ÿπÿ©</li>
                      <li>ŸÑÿß ÿ™ÿ¥ÿßÿ±ŸÉ ŸÖÿπŸÑŸàŸÖÿßÿ™ŸÉ ÿßŸÑÿ¥ÿÆÿµŸäÿ© ŸÖÿπ ÿ£ÿ∑ÿ±ÿßŸÅ ÿ£ÿÆÿ±Ÿâ</li>
                      <li>ÿ≥Ÿäÿ™ŸÖ ÿ™ÿ£ŸÉŸäÿØ ÿßŸÑÿØŸÅÿπ ÿÆŸÑÿßŸÑ 24 ÿ≥ÿßÿπÿ©</li>
                    </ul>
                  </div>
                </div>
              </div>
            </div>
          )}

          {/* Step 5: Download Ticket */}
          {currentStep === 5 && (
            <div className="space-y-6 text-center">
              <div className="mb-6">
                <div className="text-6xl mb-4">üéâ</div>
                <h3 className="text-2xl font-bold text-green-600 mb-2">ÿ¨ÿßŸáÿ≤ ŸÑŸÑÿ™ÿ≠ŸÖŸäŸÑ!</h3>
                <p className="text-gray-600">ÿ™ÿ∞ÿßŸÉÿ± ŸÉÿ£ÿ≥ ÿßŸÑÿπÿßŸÑŸÖ FIFA 2026 ÿ¨ÿßŸáÿ≤ÿ©</p>
              </div>

              <div className="bg-green-50 border border-green-200 rounded-lg p-6">
                <div className="text-sm text-gray-600 space-y-1">
                  <div><strong>ÿ±ŸÇŸÖ ÿßŸÑÿ∑ŸÑÿ®:</strong> {orderId}</div>
                  <div><strong>ÿßŸÑÿßÿ≥ŸÖ:</strong> {formData.firstName} {formData.lastName}</div>
                  <div><strong>ÿßŸÑÿ®ÿ±ŸäÿØ ÿßŸÑÿ•ŸÑŸÉÿ™ÿ±ŸàŸÜŸä:</strong> {formData.email}</div>
                  <div><strong>ÿßŸÑŸÖÿ®ŸÑÿ∫ ÿßŸÑŸÖÿØŸÅŸàÿπ:</strong> ${ticketInfo.cryptoPrice.toLocaleString()} USD</div>
                  <div><strong>ÿßŸÑÿπŸÖŸÑÿ©:</strong> {selectedCrypto.symbol} ({selectedCrypto.name})</div>
                  <div><strong>ÿπŸÜŸàÿßŸÜ ÿßŸÑŸÖÿ≠ŸÅÿ∏ÿ©:</strong> {WALLET_ADDRESS}</div>
                  {transactionId && <div><strong>ŸÖÿπÿ±ŸÅ ÿßŸÑŸÖÿπÿßŸÖŸÑÿ©:</strong> {transactionId}</div>}
                </div>
              </div>

              <button
                type="button"
                onClick={generateFIFATicketPDF}
                className="w-full bg-gradient-to-r from-blue-600 to-blue-800 hover:from-blue-700 hover:to-blue-900 text-white font-bold py-4 px-6 rounded-lg transition-all duration-300 flex items-center justify-center space-x-3"
              >
                <Download className="h-6 w-6" />
                <span>ÿ™ÿ≠ŸÖŸäŸÑ ÿßŸÑÿ™ÿ∞ŸÉÿ±ÿ© ÿßŸÑÿ±ÿ≥ŸÖŸäÿ© (PDF)</span>
                <FileText className="h-6 w-6" />
              </button>

              <p className="text-gray-600 text-sm">
                ÿ≥Ÿäÿ™ŸÖ ÿ™ÿ≠ŸÖŸäŸÑ ÿ™ÿ∞ŸÉÿ±ÿ™ŸÉ ÿßŸÑÿ±ÿ≥ŸÖŸäÿ© ŸÉŸÖŸÑŸÅ PDF. Ÿäÿ±ÿ¨Ÿâ ÿ≠ŸÅÿ∏Ÿáÿß Ÿàÿ•ÿ≠ÿ∂ÿßÿ±Ÿáÿß ŸÖÿπ ŸáŸàŸäÿ© ÿµÿßŸÑÿ≠ÿ© ŸäŸàŸÖ ÿßŸÑŸÖÿ®ÿßÿ±ÿßÿ©.
              </p>

              <div className="bg-blue-50 border border-blue-200 rounded-lg p-4">
                <div className="flex items-center justify-center space-x-2 text-blue-700">
                  <Phone className="h-5 w-5" />
                  <span className="font-semibold">ÿßŸÑÿØÿπŸÖ: {WHATSAPP_NUMBER}</span>
                </div>
              </div>

              <button
                type="button"
                onClick={onClose}
                className="bg-gray-600 hover:bg-gray-700 text-white font-bold py-3 px-6 rounded-lg"
              >
                ÿ•ÿ∫ŸÑÿßŸÇ
              </button>
            </div>
          )}

          {/* Navigation Buttons */}
          {currentStep < 5 && (
            <div className="flex justify-between mt-8 pt-6 border-t">
              {currentStep > 1 && (
                <button
                  type="button"
                  onClick={handlePrevStep}
                  className="px-6 py-2 border border-gray-300 text-gray-700 rounded-lg hover:bg-gray-50"
                >
                  ÿßŸÑÿ≥ÿßÿ®ŸÇ
                </button>
              )}
              {currentStep < 4 ? (
                <button
                  type="button"
                  onClick={handleNextStep}
                  className="ml-auto px-6 py-2 bg-blue-600 text-white rounded-lg hover:bg-blue-700"
                >
                  ÿßŸÑÿ™ÿßŸÑŸä
                </button>
              ) : null}
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

export default RegistrationForm;